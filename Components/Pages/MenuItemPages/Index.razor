@page "/menuitems"

@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using SimpleCMS.Model
@using SimpleCMS.Data
@inject IDbContextFactory<SimpleCMS.Data.ApplicationDbContext> DbFactory
@implements IAsyncDisposable

<PageTitle>Index</PageTitle>

<h1>Website: @Menu.Title</h1>

<p>
    <a href="@($"menuitems/create?MenuId={MenuId}")">Create New</a>
</p>

<QuickGrid Class="table" Items="context.MenuItem.Where(m => m.MenuId == MenuId).AsQueryable()">
    <PropertyColumn Property="menuitem => menuitem.Title" />
    <PropertyColumn Property="menuitem => menuitem.Position" />
   
    <TemplateColumn Context="menuitem">
        <a href="@($"menuitems/edit?id={menuitem.Id}&MenuId={MenuId}")">Edit</a> |
        <a href="@($"menuitems/details?id={menuitem.Id}&MenuId={MenuId}")">Details</a> |
        <a href="@($"menuitems/delete?id={menuitem.Id}&MenuId={MenuId}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {

    ApplicationDbContext context = default!;


    [SupplyParameterFromQuery]
    public int MenuId { get; set; }

    public Menu Menu { get; set; }

    protected override Task OnParametersSetAsync()
    {
       this.Menu = context.Menu.FirstOrDefault(m => m.Id == MenuId);

        return base.OnParametersSetAsync();
    }

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
