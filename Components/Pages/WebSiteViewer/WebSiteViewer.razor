@page "/WebSiteViewer"
@layout SimpleCMS.Components.Layout.EmptyLayout
@using Microsoft.EntityFrameworkCore
@using SimpleCMS.Model
@inject IDbContextFactory<SimpleCMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>WebSiteViewer</PageTitle>

<h1>WebSiteViewer</h1>

<div>
    <hr />
    @if (menu is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
    
        <div>
            <a href="@($"/menus/edit?id={menu.Id}")">Edit Menu</a> |
            <a href="@($"/menus")">Back to List</a> |
            @if (MenuItem.View != null)
            {
            <a href="@($"/Views/edit?Id={MenuItem.View.Id}")">Edit WebPage</a> 
         
            }
        </div>

        <ul>
        @foreach (var item in menu.Items)
        {
                <li><a href="@($"/WebSiteViewer?Id={Id}&MenuItemId={item.Id}")">@item.Title</a></li>
        
        }
        </ul>

        <WebPageViewer MenuItemId=MenuItemId></WebPageViewer>
        
    }
</div>

    <style>
        ul {
          list-style-type: none;
          margin: 0;
          padding: 0;
          overflow: hidden;
        }

        li {
          float: left;
        }

        li a {
          display: block;
          padding: 8px;
          background-color: #dddddd;
        }
    </style>


@code {

    Menu? menu;
    MenuItem? MenuItem;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    [SupplyParameterFromQuery]
    public int MenuItemId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        menu = await context.Menu.Include(m => m.Items).ThenInclude(i => i.View).FirstOrDefaultAsync(m => m.Id == Id);

        if (menu is null)
        {
            NavigationManager.NavigateTo("notfound");
        }

        if (MenuItemId == 0)
        {
            MenuItem = menu.Items.FirstOrDefault();
            MenuItemId = MenuItem.Id;
        }
        else
        {
            MenuItem = await context.MenuItem.Include(m => m.View).FirstOrDefaultAsync(m => m.Id == MenuItemId);
        }
    }

    // NOT WORKING
    // interactive mode server issue
    public async void OpenEditView()
    {
        // <a href="" @onclick="OpenEditView" @onclick:preventDefault>Edit WebPage</a>
        using var context = DbFactory.CreateDbContext();
        var View = await context.View.FirstOrDefaultAsync(v => v.MenuItemId == MenuItemId);

        if(View != null)
        {
            NavigationManager.NavigateTo($"/Views/edit?Id={View.Id}");
        }
      }
}
