@page "/menus/details"

@using Microsoft.EntityFrameworkCore
@using SimpleCMS.Model
@inject IDbContextFactory<SimpleCMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>zz</PageTitle>

<h1>Details</h1>
@attribute [Authorize]

<div>
    <h4>Menu</h4>
    <hr />
    @if (menu is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@menu.Title</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@menu.Description</dd>
            <dt class="col-sm-2">Icon</dt>
            <dd class="col-sm-10">@menu.Icon</dd>
            <dt class="col-sm-2">OwnerId</dt>
            <dd class="col-sm-10">@menu.OwnerId</dd>
        </dl>
        <div>
            <a href="@($"/menus/edit?id={menu.Id}")">Edit</a> |
            <a href="@($"menus/delete?id={menu.Id}")">Delete</a> |
            <a href="@($"/menus")">Back to List</a>
        </div>
    }
</div>

@code {
    Menu? menu;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        menu = await context.Menu.FirstOrDefaultAsync(m => m.Id == Id);

        if (menu is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
